{"version":3,"sources":["components/ContactForm.js","components/ContactList.js","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","_ref","addContact","name","setName","useState","email","setEmail","React","createElement","onSubmit","e","preventDefault","type","value","onChange","target","required","ContactList","contacts","deleteContact","map","contact","index","key","onClick","App","setContacts","className","newContacts","filter","_","i","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"oLAsCeA,MApCKC,IAAoB,IAAnBC,WAAEA,GAAYD,EACjC,MAAOE,EAAMC,GAAWC,mBAAS,KAC1BC,EAAOC,GAAYF,mBAAS,IASnC,OACEG,IAAAC,cAAA,QAAMC,SARcC,IACpBA,EAAEC,iBACFV,EAAW,CAAEC,OAAMG,UACnBF,EAAQ,IACRG,EAAS,MAKPC,IAAAC,cAAA,WACED,IAAAC,cAAA,aAAO,SACPD,IAAAC,cAAA,SACEI,KAAK,OACLC,MAAOX,EACPY,SAAWJ,GAAMP,EAAQO,EAAEK,OAAOF,OAClCG,UAAQ,KAGZT,IAAAC,cAAA,WACED,IAAAC,cAAA,aAAO,UACPD,IAAAC,cAAA,SACEI,KAAK,QACLC,MAAOR,EACPS,SAAWJ,GAAMJ,EAASI,EAAEK,OAAOF,OACnCG,UAAQ,KAGZT,IAAAC,cAAA,UAAQI,KAAK,UAAS,iBCfbK,MAhBKjB,IAAiC,IAAhCkB,SAAEA,EAAQC,cAAEA,GAAenB,EAC9C,OACEO,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,gBACJD,IAAAC,cAAA,UACGU,EAASE,IAAI,CAACC,EAASC,IACtBf,IAAAC,cAAA,MAAIe,IAAKD,GACND,EAAQnB,KAAK,MAAImB,EAAQhB,MAC1BE,IAAAC,cAAA,UAAQgB,QAASA,IAAML,EAAcG,IAAQ,qBCgB1CG,MArBHA,KACV,MAAOP,EAAUQ,GAAetB,mBAAS,IAWzC,OACEG,IAAAC,cAAA,OAAKmB,UAAU,aACbpB,IAAAC,cAAA,UAAI,mBACJD,IAAAC,cAACT,EAAW,CAACE,WAZGoB,IAClBK,EAAY,IAAIR,EAAUG,OAYxBd,IAAAC,cAACS,EAAW,CAACC,SAAUA,EAAUC,cATdG,IACrB,MAAMM,EAAcV,EAASW,OAAO,CAACC,EAAGC,IAAMA,IAAMT,GACpDI,EAAYE,QCFDI,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAzB,EAAA,GAAA0B,KAAAD,EAAAE,KAAA,UAAqBD,KAAKpC,IAAiD,IAAhDsC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAAS1C,EACpEsC,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHxC,IAAAC,cAACD,IAAMyC,WAAU,KACfzC,IAAAC,cAACiB,EAAG,QAORO","file":"static/js/main.57b1da2f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst ContactForm = ({ addContact }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addContact({ name, email });\r\n    setName('');\r\n    setEmail('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label>Name:</label>\r\n        <input \r\n          type=\"text\" \r\n          value={name} \r\n          onChange={(e) => setName(e.target.value)} \r\n          required \r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Email:</label>\r\n        <input \r\n          type=\"email\" \r\n          value={email} \r\n          onChange={(e) => setEmail(e.target.value)} \r\n          required \r\n        />\r\n      </div>\r\n      <button type=\"submit\">Add Contact</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <div>\r\n      <h2>Contact List</h2>\r\n      <ul>\r\n        {contacts.map((contact, index) => (\r\n          <li key={index}>\r\n            {contact.name} - {contact.email}\r\n            <button onClick={() => deleteContact(index)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { useState } from 'react';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport './App.css'; // Import the CSS file\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n\n  const addContact = (contact) => {\n    setContacts([...contacts, contact]);\n  };\n\n  const deleteContact = (index) => {\n    const newContacts = contacts.filter((_, i) => i !== index);\n    setContacts(newContacts);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Contact Manager</h1>\n      <ContactForm addContact={addContact} />\n      <ContactList contacts={contacts} deleteContact={deleteContact} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}